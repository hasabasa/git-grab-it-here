
import { useState, useEffect } from "react";
import { Card, CardContent, CardDescription, CardHeader, CardTitle } from "@/components/ui/card";
import { Input } from "@/components/ui/input";
import { Button } from "@/components/ui/button";
import { toast } from "sonner";
import { supabase } from "@/integrations/supabase/client";
import { useAuth } from "@/components/integration/useAuth";
import { AuthComponent } from "@/components/integration/AuthComponent";
import { Link } from "lucide-react";

const NicheSearchPage = () => {
  const { user, loading: authLoading } = useAuth();
  const [productUrl, setProductUrl] = useState<string>("");
  const [analysisResult, setAnalysisResult] = useState<any | null>(null);
  const [isLoading, setIsLoading] = useState(false);

  // –§—É–Ω–∫—Ü–∏—è –¥–ª—è –∞–Ω–∞–ª–∏–∑–∞ —Ç–æ–≤–∞—Ä–∞ –ø–æ —Å—Å—ã–ª–∫–µ
  const analyzeProduct = async (url: string) => {
    if (!user) {
      toast.error("–î–ª—è –∞–Ω–∞–ª–∏–∑–∞ —Ç–æ–≤–∞—Ä–∞ –Ω–µ–æ–±—Ö–æ–¥–∏–º–æ –∞–≤—Ç–æ—Ä–∏–∑–æ–≤–∞—Ç—å—Å—è");
      return;
    }

    if (!url.trim()) {
      toast.error("–í–≤–µ–¥–∏—Ç–µ —Å—Å—ã–ª–∫—É –Ω–∞ —Ç–æ–≤–∞—Ä Kaspi");
      return;
    }

    // –ü—Ä–æ–≤–µ—Ä—è–µ–º, —á—Ç–æ —ç—Ç–æ —Å—Å—ã–ª–∫–∞ –Ω–∞ Kaspi
    if (!url.includes('kaspi.kz')) {
      toast.error("–í–≤–µ–¥–∏—Ç–µ –∫–æ—Ä—Ä–µ–∫—Ç–Ω—É—é —Å—Å—ã–ª–∫—É –Ω–∞ —Ç–æ–≤–∞—Ä —Å Kaspi.kz");
      return;
    }
    
    setIsLoading(true);
    
    try {
      // –ò–º–∏—Ç–∏—Ä—É–µ–º –∞–Ω–∞–ª–∏–∑ —Ç–æ–≤–∞—Ä–∞ (–≤ —Ä–µ–∞–ª—å–Ω–æ–º –ø—Ä–∏–ª–æ–∂–µ–Ω–∏–∏ –∑–¥–µ—Å—å –±—É–¥–µ—Ç API –≤—ã–∑–æ–≤)
      await new Promise(resolve => setTimeout(resolve, 2000)); // –ò–º–∏—Ç–∞—Ü–∏—è –∑–∞–≥—Ä—É–∑–∫–∏
      
      // –ì–µ–Ω–µ—Ä–∏—Ä—É–µ–º —Å–ª—É—á–∞–π–Ω—ã–µ –¥–∞–Ω–Ω—ã–µ –¥–ª—è –¥–µ–º–æ–Ω—Å—Ç—Ä–∞—Ü–∏–∏
      const mockAnalysis = {
        productName: "–ú—ã—à—å Hoco GM21 —á–µ—Ä–Ω—ã–π",
        totalReviews: Math.floor(Math.random() * 50) + 5,
        estimatedSales: Math.floor(Math.random() * 200) + 50,
        periods: {
          month1: {
            reviews: Math.floor(Math.random() * 5) + 1,
            sales: Math.floor(Math.random() * 20) + 5
          },
          month3: {
            reviews: Math.floor(Math.random() * 10) + 3,
            sales: Math.floor(Math.random() * 60) + 30
          },
          month6: {
            reviews: Math.floor(Math.random() * 15) + 7,
            sales: Math.floor(Math.random() * 100) + 60
          },
          year1: {
            reviews: Math.floor(Math.random() * 20) + 10,
            sales: Math.floor(Math.random() * 150) + 80
          }
        }
      };
      
      setAnalysisResult(mockAnalysis);
      toast.success("–ê–Ω–∞–ª–∏–∑ —Ç–æ–≤–∞—Ä–∞ –∑–∞–≤–µ—Ä—à–µ–Ω");
    } catch (error: any) {
      console.error("Error analyzing product:", error);
      toast.error("–û—à–∏–±–∫–∞ –ø—Ä–∏ –∞–Ω–∞–ª–∏–∑–µ —Ç–æ–≤–∞—Ä–∞: " + (error.message || ''));
      setAnalysisResult(null);
    } finally {
      setIsLoading(false);
    }
  };

  // –ï—Å–ª–∏ –∏–¥–µ—Ç –∑–∞–≥—Ä—É–∑–∫–∞ –∞—É—Ç–µ–Ω—Ç–∏—Ñ–∏–∫–∞—Ü–∏–∏, –ø–æ–∫–∞–∑—ã–≤–∞–µ–º –∏–Ω–¥–∏–∫–∞—Ç–æ—Ä –∑–∞–≥—Ä—É–∑–∫–∏
  if (authLoading) {
    return (
      <div className="flex justify-center items-center h-64">
        <div className="animate-spin rounded-full h-12 w-12 border-b-2 border-primary" />
      </div>
    );
  }

  // –ï—Å–ª–∏ –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—å –Ω–µ –∞–≤—Ç–æ—Ä–∏–∑–æ–≤–∞–Ω, –ø–æ–∫–∞–∑—ã–≤–∞–µ–º –∫–æ–º–ø–æ–Ω–µ–Ω—Ç –∞–≤—Ç–æ—Ä–∏–∑–∞—Ü–∏–∏
  if (!user) {
    return (
      <div className="space-y-6">
        <h1 className="text-3xl font-bold">–ê–Ω–∞–ª–∏–∑ —Ç–æ–≤–∞—Ä–æ–≤</h1>
        <p className="text-gray-600">–î–ª—è –∏—Å–ø–æ–ª—å–∑–æ–≤–∞–Ω–∏—è –∞–Ω–∞–ª–∏–∑–∞ —Ç–æ–≤–∞—Ä–æ–≤ –Ω–µ–æ–±—Ö–æ–¥–∏–º–∞ –∞–≤—Ç–æ—Ä–∏–∑–∞—Ü–∏—è</p>
        <AuthComponent />
      </div>
    );
  }

  return (
    <div className="space-y-6">
      <h1 className="text-3xl font-bold">–ê–Ω–∞–ª–∏–∑ —Ç–æ–≤–∞—Ä–æ–≤</h1>
      <p className="text-gray-600">
        –ê–Ω–∞–ª–∏–∑ –ø—Ä–æ–¥–∞–∂ –∏ –æ—Ç–∑—ã–≤–æ–≤ —Ç–æ–≤–∞—Ä–æ–≤ –Ω–∞ Kaspi –ø–æ —Å—Å—ã–ª–∫–µ
      </p>
      
      <Card>
        <CardHeader>
          <CardTitle className="flex items-center gap-2">
            <Link className="h-5 w-5" />
            –°—Å—ã–ª–∫–∞ –Ω–∞ —Ç–æ–≤–∞—Ä Kaspi
          </CardTitle>
          <CardDescription>–í—Å—Ç–∞–≤—å—Ç–µ —Å—Å—ã–ª–∫—É –Ω–∞ —Ç–æ–≤–∞—Ä –¥–ª—è –∞–Ω–∞–ª–∏–∑–∞ –ø—Ä–æ–¥–∞–∂ –∏ –æ—Ç–∑—ã–≤–æ–≤</CardDescription>
        </CardHeader>
        <CardContent>
          <div className="grid gap-4">
            <div className="flex gap-4">
              <Input
                placeholder="https://kaspi.kz/shop/p/..."
                value={productUrl}
                onChange={(e) => setProductUrl(e.target.value)}
                disabled={isLoading}
                className="flex-1"
              />
              
              <Button 
                onClick={() => analyzeProduct(productUrl)} 
                disabled={isLoading || !productUrl.trim()}
              >
                {isLoading ? "–ê–Ω–∞–ª–∏–∑–∏—Ä—É–µ–º..." : "–ê–Ω–∞–ª–∏–∑"}
              </Button>
            </div>
            
            {isLoading && (
              <div className="flex justify-center py-8">
                <div className="animate-spin rounded-full h-8 w-8 border-b-2 border-primary"></div>
              </div>
            )}

            {analysisResult && (
              <Card className="mt-6">
                <CardHeader>
                  <CardTitle>üìä –°—Ç–∞—Ç–∏—Å—Ç–∏–∫–∞ –ø–æ —Ç–æ–≤–∞—Ä—É: {analysisResult.productName}</CardTitle>
                </CardHeader>
                <CardContent className="space-y-4">
                  <div className="grid grid-cols-1 md:grid-cols-2 gap-4">
                    <div className="space-y-2">
                      <p className="text-sm font-medium">üîπ –í—Å–µ–≥–æ –æ—Ç–∑—ã–≤–æ–≤: <span className="font-bold">{analysisResult.totalReviews}</span></p>
                      <p className="text-sm font-medium">üîπ –ü—Ä–∏–º–µ—Ä–Ω–æ –ø—Ä–æ–¥–∞–∂: <span className="font-bold">{analysisResult.estimatedSales}</span></p>
                    </div>
                  </div>

                  <div className="mt-6">
                    <h3 className="text-lg font-semibold mb-4">üìÖ –ü–æ –ø–µ—Ä–∏–æ–¥–∞–º:</h3>
                    <div className="space-y-3">
                      <div className="flex justify-between items-center p-3 bg-gray-50 rounded-lg">
                        <span className="font-medium">‚ñ™Ô∏è 1 –º–µ—Å:</span>
                        <span>{analysisResult.periods.month1.reviews} (~{analysisResult.periods.month1.sales} –ø—Ä–æ–¥–∞–∂)</span>
                      </div>
                      <div className="flex justify-between items-center p-3 bg-gray-50 rounded-lg">
                        <span className="font-medium">‚ñ™Ô∏è 3 –º–µ—Å:</span>
                        <span>{analysisResult.periods.month3.reviews} (~{analysisResult.periods.month3.sales} –ø—Ä–æ–¥–∞–∂)</span>
                      </div>
                      <div className="flex justify-between items-center p-3 bg-gray-50 rounded-lg">
                        <span className="font-medium">‚ñ™Ô∏è 6 –º–µ—Å:</span>
                        <span>{analysisResult.periods.month6.reviews} (~{analysisResult.periods.month6.sales} –ø—Ä–æ–¥–∞–∂)</span>
                      </div>
                      <div className="flex justify-between items-center p-3 bg-gray-50 rounded-lg">
                        <span className="font-medium">‚ñ™Ô∏è 1 –≥–æ–¥:</span>
                        <span>{analysisResult.periods.year1.reviews} (~{analysisResult.periods.year1.sales} –ø—Ä–æ–¥–∞–∂)</span>
                      </div>
                    </div>
                  </div>
                </CardContent>
              </Card>
            )}

            {!analysisResult && !isLoading && (
              <div className="text-center p-10">
                <p className="text-gray-500">–í–≤–µ–¥–∏—Ç–µ —Å—Å—ã–ª–∫—É –Ω–∞ —Ç–æ–≤–∞—Ä Kaspi –¥–ª—è –Ω–∞—á–∞–ª–∞ –∞–Ω–∞–ª–∏–∑–∞</p>
              </div>
            )}
          </div>
        </CardContent>
      </Card>
    </div>
  );
};

export default NicheSearchPage;
