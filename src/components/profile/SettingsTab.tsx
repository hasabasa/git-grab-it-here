
import React, { useState } from 'react';
import { Button } from "@/components/ui/button";
import { Input } from "@/components/ui/input";
import { Label } from "@/components/ui/label";
import { Card, CardContent, CardDescription, CardHeader, CardTitle } from "@/components/ui/card";
import { useAuth } from "@/components/integration/useAuth";
import { toast } from "sonner";
import { Mail, Lock, AlertTriangle, Info } from "lucide-react";
import { supabase } from "@/integrations/supabase/client";

const SettingsTab = () => {
  const { user } = useAuth();
  const [isLoading, setIsLoading] = useState(false);
  const [newEmail, setNewEmail] = useState(user?.email || '');

  const handleEmailChange = async () => {
    if (!newEmail || newEmail === user?.email) {
      toast.error('–í–≤–µ–¥–∏—Ç–µ –Ω–æ–≤—ã–π email –∞–¥—Ä–µ—Å');
      return;
    }

    setIsLoading(true);
    try {
      const { error } = await supabase.auth.updateUser({
        email: newEmail
      });

      if (error) throw error;

      toast.success('–ó–∞–ø—Ä–æ—Å –Ω–∞ –∏–∑–º–µ–Ω–µ–Ω–∏–µ email –æ—Ç–ø—Ä–∞–≤–ª–µ–Ω. –ü—Ä–æ–≤–µ—Ä—å—Ç–µ –ø–æ—á—Ç—É –¥–ª—è –ø–æ–¥—Ç–≤–µ—Ä–∂–¥–µ–Ω–∏—è.');
    } catch (error: any) {
      console.error('Error updating email:', error);
      toast.error(error.message || '–û—à–∏–±–∫–∞ –ø—Ä–∏ –∏–∑–º–µ–Ω–µ–Ω–∏–∏ email');
    } finally {
      setIsLoading(false);
    }
  };

  const handlePasswordReset = async () => {
    if (!user?.email) {
      toast.error('Email –Ω–µ –Ω–∞–π–¥–µ–Ω');
      return;
    }

    setIsLoading(true);
    try {
      console.log('üîÑ Sending password reset email to:', user.email);
      
      // –ò—Å–ø–æ–ª—å–∑—É–µ–º –ø–æ–ª–Ω—ã–π URL –¥–ª—è redirectTo
      const resetUrl = `${window.location.origin}/reset-password`;
      console.log('üîó Reset URL:', resetUrl);
      
      const { error } = await supabase.auth.resetPasswordForEmail(user.email, {
        redirectTo: resetUrl
      });

      if (error) {
        console.error('‚ùå Password reset error:', error);
        throw error;
      }

      console.log('‚úÖ Password reset email sent successfully');
      toast.success('–°—Å—ã–ª–∫–∞ –¥–ª—è —Å–±—Ä–æ—Å–∞ –ø–∞—Ä–æ–ª—è –æ—Ç–ø—Ä–∞–≤–ª–µ–Ω–∞ –Ω–∞ –≤–∞—à email');
    } catch (error: any) {
      console.error('‚ùå Error sending password reset:', error);
      toast.error(error.message || '–û—à–∏–±–∫–∞ –ø—Ä–∏ –æ—Ç–ø—Ä–∞–≤–∫–µ —Å—Å—ã–ª–∫–∏ —Å–±—Ä–æ—Å–∞ –ø–∞—Ä–æ–ª—è');
    } finally {
      setIsLoading(false);
    }
  };

  return (
    <div className="space-y-6">
      <Card>
        <CardHeader>
          <CardTitle className="flex items-center gap-2">
            <Mail className="h-5 w-5" />
            –ò–∑–º–µ–Ω–∏—Ç—å Email
          </CardTitle>
          <CardDescription>
            –û–±–Ω–æ–≤–∏—Ç–µ –≤–∞—à email –∞–¥—Ä–µ—Å. –ü–æ—Ç—Ä–µ–±—É–µ—Ç—Å—è –ø–æ–¥—Ç–≤–µ—Ä–∂–¥–µ–Ω–∏–µ –Ω–∞ –Ω–æ–≤—ã–π –∞–¥—Ä–µ—Å.
          </CardDescription>
        </CardHeader>
        <CardContent className="space-y-4">
          <div className="space-y-2">
            <Label htmlFor="currentEmail">–¢–µ–∫—É—â–∏–π email</Label>
            <Input
              id="currentEmail"
              value={user?.email || ''}
              disabled
              className="bg-gray-50"
            />
          </div>
          
          <div className="space-y-2">
            <Label htmlFor="newEmail">–ù–æ–≤—ã–π email</Label>
            <Input
              id="newEmail"
              type="email"
              value={newEmail}
              onChange={(e) => setNewEmail(e.target.value)}
              placeholder="–í–≤–µ–¥–∏—Ç–µ –Ω–æ–≤—ã–π email"
            />
          </div>
          
          <Button onClick={handleEmailChange} disabled={isLoading} className="w-full">
            {isLoading ? '–û—Ç–ø—Ä–∞–≤–∫–∞...' : '–ò–∑–º–µ–Ω–∏—Ç—å Email'}
          </Button>
        </CardContent>
      </Card>

      <Card>
        <CardHeader>
          <CardTitle className="flex items-center gap-2">
            <Lock className="h-5 w-5" />
            –°–±—Ä–æ—Å –ø–∞—Ä–æ–ª—è
          </CardTitle>
          <CardDescription>
            –û—Ç–ø—Ä–∞–≤–∏—Ç—å —Å—Å—ã–ª–∫—É –¥–ª—è —Å–±—Ä–æ—Å–∞ –ø–∞—Ä–æ–ª—è –Ω–∞ –≤–∞—à email.
          </CardDescription>
        </CardHeader>
        <CardContent className="space-y-4">
          <div className="flex items-start gap-3 p-3 bg-blue-50 border border-blue-200 rounded-md">
            <Info className="h-5 w-5 text-blue-600 mt-0.5" />
            <div className="text-sm text-blue-800">
              <p className="font-medium">–ò–Ω—Å—Ç—Ä—É–∫—Ü–∏—è</p>
              <ul className="mt-1 space-y-1 text-xs">
                <li>‚Ä¢ –°—Å—ã–ª–∫–∞ –±—É–¥–µ—Ç –æ—Ç–ø—Ä–∞–≤–ª–µ–Ω–∞ –Ω–∞ –≤–∞—à —Ç–µ–∫—É—â–∏–π email</li>
                <li>‚Ä¢ –°—Å—ã–ª–∫–∞ –¥–µ–π—Å—Ç–≤–∏—Ç–µ–ª—å–Ω–∞ –≤ —Ç–µ—á–µ–Ω–∏–µ 1 —á–∞—Å–∞</li>
                <li>‚Ä¢ –û—Ç–∫—Ä–æ–π—Ç–µ —Å—Å—ã–ª–∫—É –≤ —Ç–æ–º –∂–µ –±—Ä–∞—É–∑–µ—Ä–µ</li>
                <li>‚Ä¢ –ï—Å–ª–∏ —Å—Å—ã–ª–∫–∞ –Ω–µ —Ä–∞–±–æ—Ç–∞–µ—Ç, –∑–∞–ø—Ä–æ—Å–∏—Ç–µ –Ω–æ–≤—É—é</li>
              </ul>
            </div>
          </div>

          <div className="flex items-start gap-3 p-3 bg-yellow-50 border border-yellow-200 rounded-md">
            <AlertTriangle className="h-5 w-5 text-yellow-600 mt-0.5" />
            <div className="text-sm text-yellow-800">
              <p className="font-medium">–í–Ω–∏–º–∞–Ω–∏–µ</p>
              <p>–ü–æ—Å–ª–µ —Å–±—Ä–æ—Å–∞ –ø–∞—Ä–æ–ª—è –≤–∞–º –ø–æ—Ç—Ä–µ–±—É–µ—Ç—Å—è –≤–æ–π—Ç–∏ –≤ —Å–∏—Å—Ç–µ–º—É –∑–∞–Ω–æ–≤–æ.</p>
            </div>
          </div>
          
          <Button 
            onClick={handlePasswordReset} 
            disabled={isLoading} 
            variant="outline" 
            className="w-full"
          >
            {isLoading ? '–û—Ç–ø—Ä–∞–≤–∫–∞...' : '–û—Ç–ø—Ä–∞–≤–∏—Ç—å —Å—Å—ã–ª–∫—É —Å–±—Ä–æ—Å–∞ –ø–∞—Ä–æ–ª—è'}
          </Button>
        </CardContent>
      </Card>
    </div>
  );
};

export default SettingsTab;
