
import { useState, useEffect } from "react";
import { RadioGroup, RadioGroupItem } from "@/components/ui/radio-group";
import { Label } from "@/components/ui/label";
import { Input } from "@/components/ui/input";
import { Button } from "@/components/ui/button";
import { Switch } from "@/components/ui/switch";
import { Product } from "@/types";

interface PriceBotSettingsProps {
  product: Product;
  onSave: (settings: any) => void;
}

const PriceBotSettings = ({ product, onSave }: PriceBotSettingsProps) => {
  const [strategy, setStrategy] = useState("become-first");
  const [minProfit, setMinProfit] = useState(2000);
  const [isActive, setIsActive] = useState(false);

  // –ò–Ω–∏—Ü–∏–∞–ª–∏–∑–∞—Ü–∏—è —Å–æ—Å—Ç–æ—è–Ω–∏—è –ø—Ä–∏ –∏–∑–º–µ–Ω–µ–Ω–∏–∏ –ø—Ä–æ–¥—É–∫—Ç–∞
  useEffect(() => {
    console.log('PriceBotSettings: Initializing for product:', product.id);
    console.log('Product bot state:', product.botActive || product.bot_active);
    
    const botActiveState = product.botActive || product.bot_active || false;
    setIsActive(botActiveState);
    setMinProfit(product.minProfit || product.min_profit || 2000);
  }, [product.id]); // –ó–∞–≤–∏—Å–∏—Ç —Ç–æ–ª—å–∫–æ –æ—Ç ID –ø—Ä–æ–¥—É–∫—Ç–∞

  const handleSave = () => {
    console.log('PriceBotSettings: handleSave called with:');
    console.log('- productId:', product.id);
    console.log('- strategy:', strategy);
    console.log('- minProfit:', minProfit);
    console.log('- isActive:', isActive);
    
    onSave({
      productId: product.id,
      strategy,
      minProfit,
      isActive,
    });
  };

  const handleSwitchChange = (checked: boolean) => {
    console.log('PriceBotSettings: Switch changed to:', checked);
    setIsActive(checked);
  };

  console.log('PriceBotSettings render - isActive:', isActive, 'productId:', product.id);

  return (
    <div className="space-y-6">
      <div>
        <h3 className="text-lg font-medium mb-4">–°—Ç—Ä–∞—Ç–µ–≥–∏—è –±–æ—Ç–∞</h3>
        <RadioGroup value={strategy} onValueChange={setStrategy} className="space-y-3">
          <div className="flex items-center space-x-2">
            <RadioGroupItem value="become-first" id="become-first" />
            <Label htmlFor="become-first" className="font-normal">ü•á –°—Ç–∞–Ω—å –ø–µ—Ä–≤—ã–º (–Ω–∞ 1 —Ç–≥ –¥–µ—à–µ–≤–ª–µ)</Label>
          </div>
          <div className="flex items-center space-x-2">
            <RadioGroupItem value="equal-price" id="equal-price" />
            <Label htmlFor="equal-price" className="font-normal">‚öñÔ∏è –†–∞–≤–Ω–∞—è —Ü–µ–Ω–∞ —Å –∫–æ–Ω–∫—É—Ä–µ–Ω—Ç–æ–º</Label>
          </div>
        </RadioGroup>
      </div>

      <div className="space-y-4">
        <h3 className="text-lg font-medium">–ù–∞—Å—Ç—Ä–æ–π–∫–∏ –ø—Ä–∏–±—ã–ª–∏</h3>
        
        <div className="space-y-2">
          <Label htmlFor="min-profit">–ú–∏–Ω–∏–º–∞–ª—å–Ω–∞—è –ø—Ä–∏–±—ã–ª—å (‚Ç∏)</Label>
          <Input 
            id="min-profit" 
            type="number" 
            value={minProfit} 
            onChange={(e) => setMinProfit(parseInt(e.target.value))} 
          />
          <p className="text-sm text-gray-500">–ë–æ—Ç –Ω–µ –æ–ø—É—Å—Ç–∏—Ç —Ü–µ–Ω—É –Ω–∏–∂–µ —ç—Ç–æ–≥–æ –∑–Ω–∞—á–µ–Ω–∏—è –ø—Ä–∏–±—ã–ª–∏</p>
        </div>
      </div>

      <div className="space-y-4">
        <h3 className="text-lg font-medium">–ê–∫—Ç–∏–≤–∞—Ü–∏—è –±–æ—Ç–∞</h3>
        
        <div className="flex items-center space-x-2">
          <Switch 
            id="bot-active" 
            checked={isActive} 
            onCheckedChange={handleSwitchChange}
          />
          <Label htmlFor="bot-active">
            {isActive ? '–ë–æ—Ç –∞–∫—Ç–∏–≤–µ–Ω' : '–ë–æ—Ç –≤—ã–∫–ª—é—á–µ–Ω'}
          </Label>
        </div>
      </div>

      <Button onClick={handleSave} className="w-full">–°–æ—Ö—Ä–∞–Ω–∏—Ç—å –Ω–∞—Å—Ç—Ä–æ–π–∫–∏</Button>
    </div>
  );
};

export default PriceBotSettings;
